stages:
  - test
  - quality-gate

variables:
  NODE_VERSION: "18"

test:
  stage: test
  image: node:${NODE_VERSION}
  cache:
    paths:
      - node_modules/
  script:
    - npm ci
    - npm run lint -- --format json > eslint-results.json || true
    - npx tsc --noEmit || true
    - npm test -- --coverage --json > test-results.json || true
    - npm run build
  artifacts:
    reports:
      junit: test-results.json
    paths:
      - eslint-results.json
      - test-results.json
      - dist/

quality-gate:
  stage: quality-gate
  image: curlimages/curl:latest
  dependencies:
    - test
  script:
    - |
      curl -X POST "$SUPABASE_URL/functions/v1/ci-cd-webhook" \
        -H "Authorization: Bearer $SUPABASE_KEY" \
        -H "Content-Type: application/json" \
        -d @- << EOF
      {
        "projectId": "$CI_PROJECT_PATH",
        "buildId": "$CI_COMMIT_SHA",
        "provider": "gitlab",
        "results": {
          "eslint": $(cat eslint-results.json),
          "tests": $(cat test-results.json)
        },
        "status": "success",
        "timestamp": "$CI_COMMIT_TIMESTAMP"
      }
      EOF
    - |
      RESPONSE=$(curl -X POST "$SUPABASE_URL/functions/v1/physical-build-blocker" \
        -H "Authorization: Bearer $SUPABASE_KEY" \
        -H "Content-Type: application/json" \
        -d '{"projectId": "'"$CI_PROJECT_PATH"'", "buildId": "'"$CI_COMMIT_SHA"'"}')
      
      ALLOWED=$(echo $RESPONSE | jq -r '.allowed')
      
      if [ "$ALLOWED" != "true" ]; then
        echo "❌ Quality gate failed!"
        echo $RESPONSE
        exit 1
      fi
      
      echo "✅ Quality gate passed!"
